components:
  schemas:
    AdjustmentCreate:
      properties:
        amount:
          title: Amount
          type: integer
        chargeId:
          title: Chargeid
          type: string
        providerId:
          anyOf:
          - type: string
          - type: 'null'
          title: Providerid
        reason:
          title: Reason
          type: string
      required:
      - chargeId
      - amount
      - reason
      title: AdjustmentCreate
      type: object
    AdjustmentSummary:
      properties:
        adjustmentType:
          $ref: '#/components/schemas/AdjustmentType'
          description: Type of the adjustment
        amount:
          description: Amount of the adjustment
          title: Amount
          type: integer
        chargeId:
          title: Chargeid
          type: string
        createdDate:
          description: Date when the adjustment was created
          format: date-time
          title: Createddate
          type: string
        id:
          description: Unique identifier for the adjustment
          title: Id
          type: string
        providerId:
          anyOf:
          - type: string
          - type: 'null'
          title: Providerid
        reason:
          anyOf:
          - type: string
          - type: 'null'
          description: Reason for the adjustment
          title: Reason
      required:
      - chargeId
      - id
      - amount
      - createdDate
      - adjustmentType
      title: AdjustmentSummary
      type: object
    AdjustmentType:
      enum:
      - WRITE_OFF
      - ADJUSTMENT
      - EXTERNAL_SETTLEMENT
      title: AdjustmentType
      type: string
    AlertType:
      enum:
      - PATIENT_CREATED
      - PATIENT_UPDATED
      - APPOINTMENT_CANCELLED
      - APPOINTMENT_RESCHEDULED
      - APPOINTMENT_REQUEST
      - PAYMENT_CREATED
      - PAYMENT_FAILED
      - PAYMENT_SUCCEEDED
      - CHARGE_CREATED
      - REFUND_CREATED
      - REFUND_FAILED
      - REFUND_SUCCEEDED
      - ADJUSTMENT_CREATED
      - ADJUSTMENT_FAILED
      - ADJUSTMENT_SUCCEEDED
      - INVOICE_SENT
      - INVOICE_FAILED
      - CALL_RECIEVED
      - CALL_MADE
      - MESSAGE_RECIEVED
      - MESSAGE_SENT
      - MESSAGE_DELIVERED
      - MESSAGE_FAILED
      - EMAIL_RECIEVED
      - EMAIL_SENT
      - FORM_SUBMITTED
      - MAIL_SENT
      - MAIL_DELIVERY_FAILED
      title: AlertType
      type: string
    AppointmentDetail:
      properties:
        bookingFee:
          title: Bookingfee
          type: integer
        cancellationCost:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          title: Cancellationcost
        cptCodes:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Cptcodes
        createdDate:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Createddate
        daysBeforeCancellingCosts:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          title: Daysbeforecancellingcosts
        description:
          title: Description
          type: string
        duration:
          title: Duration
          type: integer
        followUpDaysAfter:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          title: Followupdaysafter
        formIds:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Formids
        id:
          title: Id
          type: string
        providerIds:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Providerids
        reminderDaysBefore:
          anyOf:
          - type: integer
          - type: 'null'
          default: 1
          title: Reminderdaysbefore
        roomIds:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Roomids
        title:
          title: Title
          type: string
        updatedDate:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Updateddate
        virtualAllowed:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Virtualallowed
      required:
      - id
      - duration
      - description
      - title
      - bookingFee
      title: AppointmentDetail
      type: object
    ChargeCreateWithoutID:
      description: 'Create a Charge for a Patient.

        These typically come from balances owed to the Tenant by the Patient (i.e.
        due to a copay).'
      properties:
        creatorId:
          anyOf:
          - type: string
          - type: 'null'
          description: Identifier of the `Provider` who created the charge (i.e. the
            Doctor, or relevant Biller).
          title: Creatorid
        customAmount:
          default: 0
          description: If you want to bill for an un-itemized amount, set it here.
          title: Customamount
          type: integer
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: Description of the charge.
          title: Description
        discountAmount:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          description: Any discount applied to the total outstanding.
          title: Discountamount
        discountPercentage:
          anyOf:
          - type: number
          - type: 'null'
          default: 0.0
          description: Percentage of discount applied to the charge.
          title: Discountpercentage
        externalCreatedDate:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The creation date of the charge in your external system, if
            applicable.
          title: Externalcreateddate
        externalId:
          anyOf:
          - type: string
          - type: 'null'
          description: External identifier for the charge, if applicable.
          title: Externalid
        items:
          default: []
          description: List of `Items` in the `Charge`.
          items:
            $ref: '#/components/schemas/ChargeItemCreateWithoutId'
          title: Items
          type: array
        meta:
          anyOf:
          - type: object
          - type: 'null'
          description: Any additional metadata about the charge relevant to your system.
          title: Meta
        patientId:
          description: Identifier of the patient being charged.
          title: Patientid
          type: string
        patientPaysProcessingFee:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Indicates if the patient is responsible for processing fees.
          title: Patientpaysprocessingfee
        ruleSetId:
          anyOf:
          - type: string
          - type: 'null'
          description: Identifier for the `RuleSet` applied to this `Charge`, if any.
          title: Rulesetid
        status:
          $ref: '#/components/schemas/ChargeStatus'
          default: OUTSTANDING
          description: Current status of the charge.
        subscriptionId:
          anyOf:
          - type: string
          - type: 'null'
          description: Identifier of the `Subscription` this charge is associated
            with, if any.
          title: Subscriptionid
        totalOutstanding:
          description: Total outstanding amount that is yet to be paid.
          title: Totaloutstanding
          type: integer
      required:
      - patientId
      - totalOutstanding
      title: ChargeCreateWithoutID
      type: object
    ChargeDetail:
      properties:
        adjustments:
          items:
            $ref: '#/components/schemas/AdjustmentSummary'
          title: Adjustments
          type: array
        createdDate:
          description: The date when the charge was created.
          format: date-time
          title: Createddate
          type: string
        customAmount:
          description: Any un-itemized amount that makes up the charge.
          title: Customamount
          type: integer
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: Description of the charge.
          title: Description
        discountAmount:
          description: Amount of discount applied to the charge.
          title: Discountamount
          type: integer
        discountPercentage:
          description: Percentage of discount applied to the charge.
          title: Discountpercentage
          type: number
        explanationOfBenefits:
          items:
            $ref: '#/components/schemas/ExplanationOfBenefit'
          title: Explanationofbenefits
          type: array
        externalCreatedDate:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The creation date of the charge in your external system, if
            applicable.
          title: Externalcreateddate
        externalId:
          anyOf:
          - type: string
          - type: 'null'
          description: External identifier for the charge, if applicable.
          title: Externalid
        id:
          description: Unique identifier for the charge.
          title: Id
          type: string
        items:
          items:
            $ref: '#/components/schemas/ChargeItem'
          title: Items
          type: array
        meta:
          anyOf:
          - type: object
          - type: 'null'
          description: Any additional metadata about the charge relevant to your system.
          title: Meta
        patient:
          $ref: '#/components/schemas/PatientSummary'
          description: Summary details of the patient being charged.
        patientId:
          description: Identifier of the patient being charged.
          title: Patientid
          type: string
        patientPaysProcessingFee:
          description: Indicates if the patient is responsible for processing fees.
          title: Patientpaysprocessingfee
          type: boolean
        payments:
          items:
            $ref: '#/components/schemas/ChargePaymentDetail'
          title: Payments
          type: array
        ruleSetId:
          anyOf:
          - type: string
          - type: 'null'
          description: Identifier for the rule set applied to this charge, if any.
          title: Rulesetid
        status:
          $ref: '#/components/schemas/ChargeStatus'
          description: Current status of the charge.
        total:
          description: Total amount of the charge.
          title: Total
          type: integer
        totalOutstanding:
          description: Total outstanding amount that is yet to be paid or adjusted
            away.
          title: Totaloutstanding
          type: integer
      required:
      - id
      - patientId
      - customAmount
      - total
      - totalOutstanding
      - status
      - discountAmount
      - discountPercentage
      - patientPaysProcessingFee
      - createdDate
      - patient
      - adjustments
      - payments
      - items
      - explanationOfBenefits
      title: ChargeDetail
      type: object
    ChargeItem:
      properties:
        chargeId:
          description: Identifier of the charge this item is associated with.
          title: Chargeid
          type: string
        discountAmount:
          description: Amount of discount applied to this item.
          title: Discountamount
          type: integer
        discountPercentage:
          description: Percentage of discount applied to this item.
          title: Discountpercentage
          type: number
        item:
          anyOf:
          - $ref: '#/components/schemas/ItemSummary'
          - type: 'null'
          description: Summary details of the item being charged.
        itemId:
          description: Unique identifier for the item.
          title: Itemid
          type: string
        quantity:
          description: Quantity of the item being charged.
          title: Quantity
          type: integer
      required:
      - itemId
      - chargeId
      - quantity
      - discountAmount
      - discountPercentage
      title: ChargeItem
      type: object
    ChargeItemCreateWithoutId:
      properties:
        item:
          anyOf:
          - $ref: '#/components/schemas/ItemCreateWithoutId'
          - type: 'null'
          description: Item to create if it doesn't already exist. If it does exist,
            the `item_id` should be provided.
        itemId:
          anyOf:
          - type: string
          - type: 'null'
          description: Decoda ID of the item if it already exists. If not, the `item`
            field should be provided.
          title: Itemid
        quantity:
          description: Quantity of the item being charged.
          title: Quantity
          type: integer
      required:
      - quantity
      title: ChargeItemCreateWithoutId
      type: object
    ChargePaymentChargeSummary:
      properties:
        externalId:
          anyOf:
          - type: string
          - type: 'null'
          title: Externalid
        id:
          title: Id
          type: string
        meta:
          anyOf:
          - type: object
          - type: 'null'
          title: Meta
        total:
          title: Total
          type: integer
        totalOutstanding:
          title: Totaloutstanding
          type: integer
      required:
      - totalOutstanding
      - total
      - id
      title: ChargePaymentChargeSummary
      type: object
    ChargePaymentDetail:
      properties:
        amount:
          description: The amount of the payment.
          title: Amount
          type: integer
        charge:
          $ref: '#/components/schemas/ChargePaymentChargeSummary'
          description: Summary of the charge associated with the payment.
        chargeId:
          description: The unique identifier for the charge.
          title: Chargeid
          type: string
        createdDate:
          description: The date and time the payment was created.
          format: date-time
          title: Createddate
          type: string
        payment:
          $ref: '#/components/schemas/Payment'
          description: Detailed information about the payment.
        paymentId:
          description: The unique identifier for the payment.
          title: Paymentid
          type: string
      required:
      - paymentId
      - amount
      - createdDate
      - chargeId
      - charge
      - payment
      title: ChargePaymentDetail
      type: object
    ChargePaymentSummary:
      properties:
        amount:
          description: The amount of the payment.
          title: Amount
          type: integer
        charge:
          $ref: '#/components/schemas/ChargePaymentChargeSummary'
          description: Summary of the charge associated with the payment.
        chargeId:
          description: The unique identifier for the charge.
          title: Chargeid
          type: string
        createdDate:
          description: The date and time the payment was created.
          format: date-time
          title: Createddate
          type: string
        paymentId:
          description: The unique identifier for the payment.
          title: Paymentid
          type: string
      required:
      - paymentId
      - amount
      - createdDate
      - chargeId
      - charge
      title: ChargePaymentSummary
      type: object
    ChargeStatus:
      enum:
      - OUTSTANDING
      - PAID
      - EXTERNAL_SETTLEMENT
      - VOID
      - WRITE_OFF
      - REFUNDED
      - PAYMENT_PLAN
      title: ChargeStatus
      type: string
    ChargeSummary:
      properties:
        createdDate:
          description: The date when the charge was created.
          format: date-time
          title: Createddate
          type: string
        customAmount:
          description: Any un-itemized amount that makes up the charge.
          title: Customamount
          type: integer
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: Description of the charge.
          title: Description
        discountAmount:
          description: Amount of discount applied to the charge.
          title: Discountamount
          type: integer
        discountPercentage:
          description: Percentage of discount applied to the charge.
          title: Discountpercentage
          type: number
        externalCreatedDate:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The creation date of the charge in your external system, if
            applicable.
          title: Externalcreateddate
        externalId:
          anyOf:
          - type: string
          - type: 'null'
          description: External identifier for the charge, if applicable.
          title: Externalid
        id:
          description: Unique identifier for the charge.
          title: Id
          type: string
        meta:
          anyOf:
          - type: object
          - type: 'null'
          description: Any additional metadata about the charge relevant to your system.
          title: Meta
        patient:
          $ref: '#/components/schemas/PatientSummary'
          description: Summary details of the patient being charged.
        patientId:
          description: Identifier of the patient being charged.
          title: Patientid
          type: string
        patientPaysProcessingFee:
          description: Indicates if the patient is responsible for processing fees.
          title: Patientpaysprocessingfee
          type: boolean
        ruleSetId:
          anyOf:
          - type: string
          - type: 'null'
          description: Identifier for the rule set applied to this charge, if any.
          title: Rulesetid
        status:
          $ref: '#/components/schemas/ChargeStatus'
          description: Current status of the charge.
        total:
          description: Total amount of the charge.
          title: Total
          type: integer
        totalOutstanding:
          description: Total outstanding amount that is yet to be paid or adjusted
            away.
          title: Totaloutstanding
          type: integer
      required:
      - id
      - patientId
      - customAmount
      - total
      - totalOutstanding
      - status
      - discountAmount
      - discountPercentage
      - patientPaysProcessingFee
      - createdDate
      - patient
      title: ChargeSummary
      type: object
    CommunicationMethod:
      enum:
      - Native
      - SMS
      - MAIL
      - CALL
      - COLLECTIONS
      - EMAIL
      - SMS_AND_EMAIL
      title: CommunicationMethod
      type: string
    ExplanationOfBenefit:
      properties:
        chargeBalance:
          anyOf:
          - type: integer
          - type: 'null'
          description: Remaining balance on the charge.
          title: Chargebalance
        chargeId:
          description: Identifier of the charge this explanation of benefit is associated
            with.
          title: Chargeid
          type: string
        contractualAdjustment:
          anyOf:
          - type: integer
          - type: 'null'
          description: Amount of contractual adjustment.
          title: Contractualadjustment
        diagnoses:
          anyOf:
          - type: string
          - type: 'null'
          description: Diagnoses codes for the explanation of benefit.
          title: Diagnoses
        diagnosesDescription:
          anyOf:
          - type: string
          - type: 'null'
          description: Description of the diagnoses.
          title: Diagnosesdescription
        id:
          description: Unique identifier for the explanation of benefit.
          title: Id
          type: string
        insurancePayment:
          anyOf:
          - type: integer
          - type: 'null'
          description: Amount paid by insurance.
          title: Insurancepayment
        locationName:
          anyOf:
          - type: string
          - type: 'null'
          description: Name of the location where the charge was created.
          title: Locationname
        manualAdjustment:
          anyOf:
          - type: integer
          - type: 'null'
          description: Amount of manual adjustment.
          title: Manualadjustment
        originalChargeAmount:
          anyOf:
          - type: integer
          - type: 'null'
          description: Original amount charged.
          title: Originalchargeamount
        patientBalance:
          anyOf:
          - type: integer
          - type: 'null'
          description: Remaining balance for the patient.
          title: Patientbalance
        patientPayment:
          anyOf:
          - type: integer
          - type: 'null'
          description: Amount paid by patient.
          title: Patientpayment
        procedure:
          description: Procedure code for the explanation of benefit.
          title: Procedure
          type: string
        procedureDescription:
          description: Description of the procedure.
          title: Proceduredescription
          type: string
      required:
      - id
      - chargeId
      - diagnoses
      - diagnosesDescription
      - procedure
      - procedureDescription
      title: ExplanationOfBenefit
      type: object
    Gender:
      enum:
      - MALE
      - FEMALE
      - OTHER
      - PREFER_NOT_TO_SAY
      title: Gender
      type: string
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    InvoiceCreate:
      properties:
        chargeId:
          description: Identifier of the charge associated with this invoice.
          title: Chargeid
          type: string
        externalId:
          anyOf:
          - type: string
          - type: 'null'
          description: External identifier for the invoice, if applicable.
          title: Externalid
        ruleId:
          description: Identifier of the rule that triggered this invoice, if applicable.
          title: Ruleid
          type: string
      required:
      - chargeId
      - ruleId
      title: InvoiceCreate
      type: object
    InvoiceSummary:
      properties:
        actionId:
          anyOf:
          - type: string
          - type: 'null'
          description: Identifier of the action that created this invoice, if applicable.
          title: Actionid
        active:
          description: Indicates whether this invoice is currently active.
          title: Active
          type: boolean
        createdDate:
          description: The date and time when this invoice was created.
          format: date-time
          title: Createddate
          type: string
        decodaPaymentLinkUrl:
          description: Decoda-specific URL for payment processing.
          title: Decodapaymentlinkurl
          type: string
        id:
          description: Unique identifier for the invoice.
          title: Id
          type: string
        method:
          $ref: '#/components/schemas/CommunicationMethod'
          description: The method used to communicate this invoice to the patient.
        patientId:
          description: Identifier of the patient associated with this invoice.
          title: Patientid
          type: string
        paymentLinkUrl:
          description: URL for the patient to make a payment for this invoice.
          title: Paymentlinkurl
          type: string
        ruleId:
          anyOf:
          - type: string
          - type: 'null'
          description: Identifier of the rule that triggered this invoice, if applicable.
          title: Ruleid
      required:
      - id
      - patientId
      - paymentLinkUrl
      - decodaPaymentLinkUrl
      - method
      - active
      - createdDate
      title: InvoiceSummary
      type: object
    ItemCreateWithoutId:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional description of the item
          title: Description
        image:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional URL to a public image of the item
          title: Image
        meta:
          anyOf:
          - type: object
          - type: 'null'
          description: Any additional metadata about the item relevant to your system.
          title: Meta
        name:
          description: Name of the item
          title: Name
          type: string
        price:
          description: Price of the item in cents
          title: Price
          type: integer
        unit:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional unit of measurement for the item
          title: Unit
      required:
      - name
      - price
      title: ItemCreateWithoutId
      type: object
    ItemSummary:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional description of the item
          title: Description
        id:
          description: Unique identifier for the item
          title: Id
          type: string
        image:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional URL to an image of the item
          title: Image
        meta:
          anyOf:
          - type: object
          - type: 'null'
          description: Any additional metadata about the item relevant to your system.
          title: Meta
        name:
          description: Name of the item
          title: Name
          type: string
        price:
          description: Price of the item in cents
          title: Price
          type: integer
        unit:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional unit of measurement for the item
          title: Unit
      required:
      - id
      - name
      - price
      title: ItemSummary
      type: object
    ItemUpdate:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional description of the item
          title: Description
        image:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional URL to a public image of the item
          title: Image
        meta:
          anyOf:
          - type: object
          - type: 'null'
          description: Any additional metadata about the item relevant to your system.
          title: Meta
        name:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional name of the item
          title: Name
        price:
          anyOf:
          - type: integer
          - type: 'null'
          description: Optional price of the item in cents
          title: Price
        unit:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional unit of measurement for the item
          title: Unit
      title: ItemUpdate
      type: object
    MessageStatus:
      enum:
      - CREATED
      - QUEUED
      - SCHEDULED
      - SENT
      - DELIVERED
      - READ
      - FAILED
      - EXPIRED
      - OPTED_OUT
      title: MessageStatus
      type: string
    MessageSummary:
      properties:
        chatId:
          title: Chatid
          type: string
        content:
          title: Content
          type: string
        createdDate:
          format: date-time
          title: Createddate
          type: string
        errorMessage:
          anyOf:
          - type: string
          - type: 'null'
          title: Errormessage
        functionCall:
          anyOf:
          - type: object
          - type: 'null'
          title: Functioncall
        id:
          title: Id
          type: string
        messageUid:
          anyOf:
          - type: string
          - type: 'null'
          title: Messageuid
        sender:
          $ref: '#/components/schemas/UserSummary'
        sendoMessageId:
          anyOf:
          - type: string
          - type: 'null'
          title: Sendomessageid
        status:
          $ref: '#/components/schemas/MessageStatus'
      required:
      - id
      - content
      - chatId
      - status
      - sender
      - createdDate
      title: MessageSummary
      type: object
    Page_ItemSummary_:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ItemSummary'
          title: Data
          type: array
        total:
          title: Total
          type: integer
      required:
      - data
      - total
      title: Page[ItemSummary]
      type: object
    PatientCreate:
      properties:
        address:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's primary address.
          title: Address
        addressLineTwo:
          anyOf:
          - type: string
          - type: 'null'
          description: Additional address information.
          title: Addresslinetwo
        addressValid:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the user's address is valid.
          title: Addressvalid
        allergies:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: List of patient's allergies.
          title: Allergies
        city:
          anyOf:
          - type: string
          - type: 'null'
          description: The city of the user's address.
          title: City
        country:
          anyOf:
          - type: string
          - type: 'null'
          description: The country of the user's address.
          title: Country
        dateOfBirth:
          anyOf:
          - format: date
            type: string
          - type: 'null'
          description: The date of birth of the patient.
          title: Dateofbirth
        email:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's email address.
          title: Email
        externalUserId:
          anyOf:
          - type: string
          - type: 'null'
          description: An identifier in your system that corresponds to this patient.
          title: Externaluserid
        familyHistory:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: List of patient's family medical history.
          title: Familyhistory
        firebaseUid:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's Firebase UID if available.
          title: Firebaseuid
        firstName:
          description: The user's first name.
          title: Firstname
          type: string
        gender:
          anyOf:
          - $ref: '#/components/schemas/Gender'
          - type: 'null'
          description: The gender of the patient.
        id:
          anyOf:
          - type: string
          - type: 'null'
          description: The unique identifier for the user.
          title: Id
        lastName:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's last name.
          title: Lastname
        medicalHistory:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: List of patient's medical history.
          title: Medicalhistory
        medications:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: List of patient's medications.
          title: Medications
        meta:
          anyOf:
          - type: object
          - type: 'null'
          description: Any additional metadata about the user relevant to your system.
          title: Meta
        optedOutOfSms:
          default: false
          description: Indicates whether the patient has opted out of receiving SMS
            messages.
          title: Optedoutofsms
          type: boolean
        phoneNumber:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's phone number.
          title: Phonenumber
        prescriptions:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: List of patient's prescriptions.
          title: Prescriptions
        state:
          anyOf:
          - type: string
          - type: 'null'
          description: The state of the user's address.
          title: State
        type:
          default: PATIENT
          title: Type
          type: string
        updatedDate:
          format: date-time
          title: Updateddate
          type: string
        zipCode:
          anyOf:
          - type: string
          - type: 'null'
          description: The postal code of the user's address.
          title: Zipcode
      required:
      - firstName
      title: PatientCreate
      type: object
    PatientSummary:
      properties:
        address:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's primary address.
          title: Address
        addressLineTwo:
          anyOf:
          - type: string
          - type: 'null'
          description: Additional address information.
          title: Addresslinetwo
        addressValid:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the user's address is valid.
          title: Addressvalid
        allergies:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: List of patient's allergies.
          title: Allergies
        city:
          anyOf:
          - type: string
          - type: 'null'
          description: The city of the user's address.
          title: City
        country:
          anyOf:
          - type: string
          - type: 'null'
          description: The country of the user's address.
          title: Country
        createdDate:
          description: The date and time when the user was created.
          format: date-time
          title: Createddate
          type: string
        dateOfBirth:
          anyOf:
          - format: date
            type: string
          - type: 'null'
          description: The date of birth of the patient.
          title: Dateofbirth
        email:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's email address.
          title: Email
        externalUserId:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's external identifier if available.
          title: Externaluserid
        familyHistory:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: List of patient's family medical history.
          title: Familyhistory
        firstName:
          description: The user's first name.
          title: Firstname
          type: string
        id:
          description: The unique identifier for the user.
          title: Id
          type: string
        lastName:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's last name.
          title: Lastname
        medicalHistory:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: List of patient's medical history.
          title: Medicalhistory
        medications:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: List of patient's medications.
          title: Medications
        meta:
          anyOf:
          - type: object
          - type: 'null'
          description: Any additional metadata about the user relevant to your system.
          title: Meta
        optedOutOfSms:
          default: false
          description: Indicates whether the patient has opted out of receiving SMS
            messages.
          title: Optedoutofsms
          type: boolean
        phoneNumber:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's phone number.
          title: Phonenumber
        prescriptions:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: List of patient's prescriptions.
          title: Prescriptions
        state:
          anyOf:
          - type: string
          - type: 'null'
          description: The state of the user's address.
          title: State
        type:
          description: The type of user.
          title: Type
          type: string
        zipCode:
          anyOf:
          - type: string
          - type: 'null'
          description: The postal code of the user's address.
          title: Zipcode
      required:
      - id
      - firstName
      - type
      - createdDate
      title: PatientSummary
      type: object
    PatientUpdate:
      properties:
        address:
          anyOf:
          - type: string
          - type: 'null'
          title: Address
        addressLineTwo:
          anyOf:
          - type: string
          - type: 'null'
          title: Addresslinetwo
        addressValid:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Addressvalid
        allergies:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Allergies
        city:
          anyOf:
          - type: string
          - type: 'null'
          title: City
        country:
          anyOf:
          - type: string
          - type: 'null'
          title: Country
        dateOfBirth:
          anyOf:
          - format: date
            type: string
          - type: 'null'
          title: Dateofbirth
        email:
          anyOf:
          - type: string
          - type: 'null'
          title: Email
        externalUserId:
          anyOf:
          - type: string
          - type: 'null'
          title: Externaluserid
        familyHistory:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Familyhistory
        firstName:
          anyOf:
          - type: string
          - type: 'null'
          title: Firstname
        gender:
          anyOf:
          - $ref: '#/components/schemas/Gender'
          - type: 'null'
        lastName:
          anyOf:
          - type: string
          - type: 'null'
          title: Lastname
        medicalHistory:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Medicalhistory
        medications:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Medications
        meta:
          anyOf:
          - type: object
          - type: 'null'
          title: Meta
        optedOutOfSms:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Optedoutofsms
        phoneNumber:
          anyOf:
          - type: string
          - type: 'null'
          title: Phonenumber
        prescriptions:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Prescriptions
        state:
          anyOf:
          - type: string
          - type: 'null'
          title: State
        type:
          anyOf:
          - type: string
          - type: 'null'
          title: Type
        updatedDate:
          format: date-time
          title: Updateddate
          type: string
        zipCode:
          anyOf:
          - type: string
          - type: 'null'
          title: Zipcode
      title: PatientUpdate
      type: object
    Payment:
      properties:
        amount:
          description: The total amount of the payment.
          title: Amount
          type: integer
        createdDate:
          description: The date and time the payment was created.
          format: date-time
          title: Createddate
          type: string
        currency:
          default: USD
          description: The currency in which the payment was made.
          title: Currency
          type: string
        failedReason:
          anyOf:
          - type: string
          - type: 'null'
          description: Reason for payment failure if applicable.
          title: Failedreason
        fee:
          description: The fee associated with the transaction.
          title: Fee
          type: integer
        id:
          description: The unique identifier for the payment.
          title: Id
          type: string
        patientId:
          anyOf:
          - type: string
          - type: 'null'
          description: The ID of the patient associated with the payment.
          title: Patientid
        payinConfigId:
          anyOf:
          - type: string
          - type: 'null'
          description: The configuration ID for the payin.
          title: Payinconfigid
        payinId:
          anyOf:
          - type: string
          - type: 'null'
          description: The ID of the payin associated with the payment.
          title: Payinid
        paymentMedium:
          $ref: '#/components/schemas/PaymentMedium'
          description: The medium through which the payment was made.
        paymentMethod:
          anyOf:
          - $ref: '#/components/schemas/PaymentMethodSummary'
          - type: 'null'
          description: Summary of the payment method used.
        paymentMethodId:
          anyOf:
          - type: string
          - type: 'null'
          description: The ID of the payment method used.
          title: Paymentmethodid
        refunds:
          description: List of refunds associated with the payment.
          items:
            $ref: '#/components/schemas/RefundSummary'
          title: Refunds
          type: array
        status:
          $ref: '#/components/schemas/PaymentStatus'
          description: The current status of the payment.
        stripePaymentIntentId:
          anyOf:
          - type: string
          - type: 'null'
          description: Stripe's payment intent ID if used.
          title: Stripepaymentintentid
        updatedDate:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date and time the payment was last updated.
          title: Updateddate
      required:
      - id
      - amount
      - status
      - paymentMedium
      - createdDate
      - fee
      - refunds
      title: Payment
      type: object
    PaymentMedium:
      enum:
      - POS
      - VIRTUAL_TERMINAL
      - PAYMENT_LINK
      - PAYMENT_PLAN
      - EMBEDDED_FORM
      - SUBSCRIPTION
      - CASH
      - PATIENT_PORTAL
      title: PaymentMedium
      type: string
    PaymentMethodSummary:
      properties:
        accountHolderType:
          anyOf:
          - type: string
          - type: 'null'
          title: Accountholdertype
        accountNumberLast4:
          anyOf:
          - type: integer
          - type: 'null'
          title: Accountnumberlast4
        bankName:
          anyOf:
          - type: string
          - type: 'null'
          title: Bankname
        brand:
          anyOf:
          - type: string
          - type: 'null'
          title: Brand
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        expMonth:
          anyOf:
          - type: integer
          - type: 'null'
          title: Expmonth
        expYear:
          anyOf:
          - type: integer
          - type: 'null'
          title: Expyear
        id:
          title: Id
          type: string
        last4:
          anyOf:
          - type: string
          - type: 'null'
          title: Last4
        patientId:
          anyOf:
          - type: string
          - type: 'null'
          title: Patientid
        rainforestPaymentMethodId:
          title: Rainforestpaymentmethodid
          type: string
        routingNumber:
          anyOf:
          - type: integer
          - type: 'null'
          title: Routingnumber
        type:
          anyOf:
          - $ref: '#/components/schemas/PaymentMethodType'
          - type: 'null'
      required:
      - id
      - patientId
      - rainforestPaymentMethodId
      - brand
      - last4
      - expMonth
      - expYear
      - accountHolderType
      - accountNumberLast4
      - bankName
      - routingNumber
      - description
      - type
      title: PaymentMethodSummary
      type: object
    PaymentMethodType:
      enum:
      - CARD
      - ACH
      - APPLE_PAY
      title: PaymentMethodType
      type: string
    PaymentStatus:
      enum:
      - CANCELED
      - CREATED
      - FAILED
      - IN_REVIEW
      - PRESENTING
      - PROCESSING
      - SUCCEEDED
      title: PaymentStatus
      type: string
    PaymentSummary:
      properties:
        amount:
          description: The total amount of the payment.
          title: Amount
          type: integer
        createdDate:
          description: The date and time the payment was created.
          format: date-time
          title: Createddate
          type: string
        currency:
          default: USD
          description: The currency in which the payment was made.
          title: Currency
          type: string
        failedReason:
          anyOf:
          - type: string
          - type: 'null'
          description: Reason for payment failure if applicable.
          title: Failedreason
        fee:
          description: The fee associated with the transaction.
          title: Fee
          type: integer
        id:
          description: The unique identifier for the payment.
          title: Id
          type: string
        patientId:
          anyOf:
          - type: string
          - type: 'null'
          description: The ID of the patient associated with the payment.
          title: Patientid
        payinConfigId:
          anyOf:
          - type: string
          - type: 'null'
          description: The configuration ID for the payin.
          title: Payinconfigid
        payinId:
          anyOf:
          - type: string
          - type: 'null'
          description: The ID of the payin associated with the payment.
          title: Payinid
        paymentMedium:
          $ref: '#/components/schemas/PaymentMedium'
          description: The medium through which the payment was made.
        paymentMethodId:
          anyOf:
          - type: string
          - type: 'null'
          description: The ID of the payment method used.
          title: Paymentmethodid
        status:
          $ref: '#/components/schemas/PaymentStatus'
          description: The current status of the payment.
        stripePaymentIntentId:
          anyOf:
          - type: string
          - type: 'null'
          description: Stripe's payment intent ID if used.
          title: Stripepaymentintentid
        updatedDate:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date and time the payment was last updated.
          title: Updateddate
      required:
      - id
      - amount
      - status
      - paymentMedium
      - createdDate
      - fee
      title: Payment
      type: object
    PaymentWithCharges:
      properties:
        amount:
          description: The total amount of the payment.
          title: Amount
          type: integer
        charges:
          items:
            $ref: '#/components/schemas/ChargePaymentSummary'
          title: Charges
          type: array
        createdDate:
          description: The date and time the payment was created.
          format: date-time
          title: Createddate
          type: string
        currency:
          default: USD
          description: The currency in which the payment was made.
          title: Currency
          type: string
        failedReason:
          anyOf:
          - type: string
          - type: 'null'
          description: Reason for payment failure if applicable.
          title: Failedreason
        fee:
          description: The fee associated with the transaction.
          title: Fee
          type: integer
        id:
          description: The unique identifier for the payment.
          title: Id
          type: string
        patientId:
          anyOf:
          - type: string
          - type: 'null'
          description: The ID of the patient associated with the payment.
          title: Patientid
        payinConfigId:
          anyOf:
          - type: string
          - type: 'null'
          description: The configuration ID for the payin.
          title: Payinconfigid
        payinId:
          anyOf:
          - type: string
          - type: 'null'
          description: The ID of the payin associated with the payment.
          title: Payinid
        paymentMedium:
          $ref: '#/components/schemas/PaymentMedium'
          description: The medium through which the payment was made.
        paymentMethodId:
          anyOf:
          - type: string
          - type: 'null'
          description: The ID of the payment method used.
          title: Paymentmethodid
        status:
          $ref: '#/components/schemas/PaymentStatus'
          description: The current status of the payment.
        stripePaymentIntentId:
          anyOf:
          - type: string
          - type: 'null'
          description: Stripe's payment intent ID if used.
          title: Stripepaymentintentid
        updatedDate:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date and time the payment was last updated.
          title: Updateddate
      required:
      - id
      - amount
      - status
      - paymentMedium
      - createdDate
      - fee
      - charges
      title: Payment
      type: object
    ProviderCreate:
      properties:
        address:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's primary address.
          title: Address
        addressLineTwo:
          anyOf:
          - type: string
          - type: 'null'
          description: Additional address information.
          title: Addresslinetwo
        addressValid:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the user's address is valid.
          title: Addressvalid
        city:
          anyOf:
          - type: string
          - type: 'null'
          description: The city of the user's address.
          title: City
        country:
          anyOf:
          - type: string
          - type: 'null'
          description: The country of the user's address.
          title: Country
        email:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's email address.
          title: Email
        externalUserId:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's external identifier if available.
          title: Externaluserid
        firebaseUid:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's Firebase UID if available.
          title: Firebaseuid
        firstName:
          description: The user's first name.
          title: Firstname
          type: string
        id:
          anyOf:
          - type: string
          - type: 'null'
          description: The unique identifier for the user.
          title: Id
        lastName:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's last name.
          title: Lastname
        meta:
          anyOf:
          - type: object
          - type: 'null'
          description: Any additional metadata about the user relevant to your system.
          title: Meta
        phoneNumber:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's phone number.
          title: Phonenumber
        roles:
          description: List of roles associated with the provider.
          items:
            type: string
          title: Roles
          type: array
        state:
          anyOf:
          - type: string
          - type: 'null'
          description: The state of the user's address.
          title: State
        type:
          anyOf:
          - type: string
          - type: 'null'
          title: Type
        updatedDate:
          format: date-time
          title: Updateddate
          type: string
        zipCode:
          anyOf:
          - type: string
          - type: 'null'
          description: The postal code of the user's address.
          title: Zipcode
      required:
      - firstName
      - roles
      title: ProviderCreate
      type: object
    ProviderUpdate:
      properties:
        address:
          anyOf:
          - type: string
          - type: 'null'
          title: Address
        addressLineTwo:
          anyOf:
          - type: string
          - type: 'null'
          title: Addresslinetwo
        addressValid:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Addressvalid
        city:
          anyOf:
          - type: string
          - type: 'null'
          title: City
        country:
          anyOf:
          - type: string
          - type: 'null'
          title: Country
        email:
          anyOf:
          - type: string
          - type: 'null'
          title: Email
        externalUserId:
          anyOf:
          - type: string
          - type: 'null'
          title: Externaluserid
        firstName:
          anyOf:
          - type: string
          - type: 'null'
          title: Firstname
        lastName:
          anyOf:
          - type: string
          - type: 'null'
          title: Lastname
        meta:
          anyOf:
          - type: object
          - type: 'null'
          title: Meta
        phoneNumber:
          anyOf:
          - type: string
          - type: 'null'
          title: Phonenumber
        roles:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: List of roles associated with the provider.
          title: Roles
        state:
          anyOf:
          - type: string
          - type: 'null'
          title: State
        type:
          anyOf:
          - type: string
          - type: 'null'
          title: Type
        updatedDate:
          format: date-time
          title: Updateddate
          type: string
        zipCode:
          anyOf:
          - type: string
          - type: 'null'
          title: Zipcode
      title: ProviderUpdate
      type: object
    RefundReason:
      enum:
      - DUPLICATE
      - DISPUTE
      - OTHER
      title: RefundReason
      type: string
    RefundSummary:
      properties:
        amount:
          title: Amount
          type: integer
        createdDate:
          format: date-time
          title: Createddate
          type: string
        fee:
          default: 0
          title: Fee
          type: integer
        id:
          title: Id
          type: string
        paymentId:
          title: Paymentid
          type: string
        rainforestRefundId:
          anyOf:
          - type: string
          - type: 'null'
          title: Rainforestrefundid
        reason:
          $ref: '#/components/schemas/RefundReason'
        status:
          $ref: '#/components/schemas/PaymentStatus'
      required:
      - id
      - paymentId
      - amount
      - reason
      - createdDate
      - status
      title: RefundSummary
      type: object
    RoleSummary:
      properties:
        name:
          title: Name
          type: string
      required:
      - name
      title: RoleSummary
      type: object
    RuleCreate:
      properties:
        amountGreaterThan:
          anyOf:
          - type: integer
          - type: 'null'
          description: Lower bound for the amount, exclusive.
          title: Amountgreaterthan
        amountLessThan:
          anyOf:
          - type: integer
          - type: 'null'
          description: Upper bound for the amount, exclusive.
          title: Amountlessthan
        delayInDays:
          description: Number of days to delay before applying the rule.
          title: Delayindays
          type: integer
        lessThanOrEqualTo:
          anyOf:
          - type: integer
          - type: 'null'
          description: Upper bound for the amount, inclusive.
          title: Lessthanorequalto
        message:
          anyOf:
          - type: string
          - type: 'null'
          description: Message to be sent when applying this rule, must contain the
            {url} and {first_name} placeholders.
          title: Message
        method:
          $ref: '#/components/schemas/CommunicationMethod'
          description: Communication method to be used for this rule.
        name:
          description: Name of the rule.
          title: Name
          type: string
        ruleSetId:
          description: Identifier of the rule set this rule belongs to.
          title: Rulesetid
          type: string
      required:
      - name
      - ruleSetId
      - delayInDays
      - method
      title: RuleCreate
      type: object
    RuleCreateWithoutId:
      properties:
        amountGreaterThan:
          anyOf:
          - type: integer
          - type: 'null'
          description: Lower bound for the amount, exclusive.
          title: Amountgreaterthan
        amountLessThan:
          anyOf:
          - type: integer
          - type: 'null'
          description: Upper bound for the amount, exclusive.
          title: Amountlessthan
        delayInDays:
          description: Number of days to delay before applying the rule.
          title: Delayindays
          type: integer
        lessThanOrEqualTo:
          anyOf:
          - type: integer
          - type: 'null'
          description: Upper bound for the amount, inclusive.
          title: Lessthanorequalto
        message:
          anyOf:
          - type: string
          - type: 'null'
          description: Message to be sent when applying this rule, must contain the
            {url} and {first_name} placeholders.
          title: Message
        method:
          $ref: '#/components/schemas/CommunicationMethod'
          description: Communication method to be used for this rule.
        name:
          description: Name of the rule.
          title: Name
          type: string
      required:
      - name
      - delayInDays
      - method
      title: RuleCreateWithoutId
      type: object
    RuleSetCreate:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional description of the rule set to be created.
          title: Description
        name:
          description: Name of the rule set to be created.
          title: Name
          type: string
        rules:
          default: []
          description: List of rules to be created.
          items:
            $ref: '#/components/schemas/RuleCreateWithoutId'
          title: Rules
          type: array
      required:
      - name
      title: RuleSetCreate
      type: object
    RuleSetSummary:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          description: Optional description of the rule set.
          title: Description
        id:
          description: Unique identifier for the rule set.
          title: Id
          type: string
        name:
          description: Name of the rule set.
          title: Name
          type: string
        rules:
          default: []
          description: List of rules contained in this rule set.
          items:
            $ref: '#/components/schemas/RuleSummary'
          title: Rules
          type: array
      required:
      - id
      - name
      title: RuleSetSummary
      type: object
    RuleSummary:
      properties:
        amountGreaterThan:
          anyOf:
          - type: integer
          - type: 'null'
          description: Lower bound for the amount, exclusive.
          title: Amountgreaterthan
        amountLessThan:
          anyOf:
          - type: integer
          - type: 'null'
          description: Upper bound for the amount, exclusive.
          title: Amountlessthan
        delayInDays:
          description: Number of days to delay before applying the rule.
          title: Delayindays
          type: integer
        id:
          description: Unique identifier for the rule.
          title: Id
          type: string
        lessThanOrEqualTo:
          anyOf:
          - type: integer
          - type: 'null'
          description: Upper bound for the amount, inclusive.
          title: Lessthanorequalto
        message:
          anyOf:
          - type: string
          - type: 'null'
          description: Message to be sent when applying this rule.
          title: Message
        method:
          $ref: '#/components/schemas/CommunicationMethod'
          description: Communication method to be used for this rule.
        name:
          description: Name of the rule.
          title: Name
          type: string
        ruleSetId:
          description: Identifier of the rule set this rule belongs to.
          title: Rulesetid
          type: string
      required:
      - id
      - name
      - delayInDays
      - ruleSetId
      - method
      title: RuleSummary
      type: object
    RuleUpdate:
      properties:
        amountGreaterThan:
          anyOf:
          - type: integer
          - type: 'null'
          description: Lower bound for the amount, exclusive.
          title: Amountgreaterthan
        amountLessThan:
          anyOf:
          - type: integer
          - type: 'null'
          description: Upper bound for the amount, exclusive.
          title: Amountlessthan
        delayInDays:
          anyOf:
          - type: integer
          - type: 'null'
          description: Number of days to delay before applying the rule.
          title: Delayindays
        lessThanOrEqualTo:
          anyOf:
          - type: integer
          - type: 'null'
          description: Upper bound for the amount, inclusive.
          title: Lessthanorequalto
        message:
          anyOf:
          - type: string
          - type: 'null'
          description: Message to be sent when applying this rule, must contain the
            {url} and {first_name} placeholders.
          title: Message
        method:
          anyOf:
          - $ref: '#/components/schemas/CommunicationMethod'
          - type: 'null'
          description: Communication method to be used for this rule.
      title: RuleUpdate
      type: object
    TypedUserSummary:
      properties:
        address:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's primary address.
          title: Address
        addressLineTwo:
          anyOf:
          - type: string
          - type: 'null'
          description: Additional address information.
          title: Addresslinetwo
        addressValid:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the user's address is valid.
          title: Addressvalid
        city:
          anyOf:
          - type: string
          - type: 'null'
          description: The city of the user's address.
          title: City
        country:
          anyOf:
          - type: string
          - type: 'null'
          description: The country of the user's address.
          title: Country
        createdDate:
          description: The date and time when the user was created.
          format: date-time
          title: Createddate
          type: string
        email:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's email address.
          title: Email
        externalUserId:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's external identifier if available.
          title: Externaluserid
        firstName:
          description: The user's first name.
          title: Firstname
          type: string
        id:
          description: The unique identifier for the user.
          title: Id
          type: string
        lastName:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's last name.
          title: Lastname
        meta:
          anyOf:
          - type: object
          - type: 'null'
          description: Any additional metadata about the user relevant to your system.
          title: Meta
        phoneNumber:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's phone number.
          title: Phonenumber
        roles:
          description: List of roles associated with the provider.
          items:
            $ref: '#/components/schemas/RoleSummary'
          title: Roles
          type: array
        state:
          anyOf:
          - type: string
          - type: 'null'
          description: The state of the user's address.
          title: State
        type:
          description: Type of the user, fixed as 'provider'.
          title: Type
          type: string
        zipCode:
          anyOf:
          - type: string
          - type: 'null'
          description: The postal code of the user's address.
          title: Zipcode
      required:
      - id
      - firstName
      - type
      - createdDate
      - roles
      title: TypedUserSummary
      type: object
    UserSummary:
      properties:
        address:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's primary address.
          title: Address
        addressLineTwo:
          anyOf:
          - type: string
          - type: 'null'
          description: Additional address information.
          title: Addresslinetwo
        addressValid:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Whether the user's address is valid.
          title: Addressvalid
        city:
          anyOf:
          - type: string
          - type: 'null'
          description: The city of the user's address.
          title: City
        country:
          anyOf:
          - type: string
          - type: 'null'
          description: The country of the user's address.
          title: Country
        createdDate:
          description: The date and time when the user was created.
          format: date-time
          title: Createddate
          type: string
        email:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's email address.
          title: Email
        externalUserId:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's external identifier if available.
          title: Externaluserid
        firstName:
          description: The user's first name.
          title: Firstname
          type: string
        id:
          description: The unique identifier for the user.
          title: Id
          type: string
        lastName:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's last name.
          title: Lastname
        meta:
          anyOf:
          - type: object
          - type: 'null'
          description: Any additional metadata about the user relevant to your system.
          title: Meta
        phoneNumber:
          anyOf:
          - type: string
          - type: 'null'
          description: The user's phone number.
          title: Phonenumber
        state:
          anyOf:
          - type: string
          - type: 'null'
          description: The state of the user's address.
          title: State
        type:
          description: The type of user.
          title: Type
          type: string
        zipCode:
          anyOf:
          - type: string
          - type: 'null'
          description: The postal code of the user's address.
          title: Zipcode
      required:
      - id
      - firstName
      - type
      - createdDate
      title: UserSummary
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    WebhookCreate:
      properties:
        notificationEmail:
          anyOf:
          - type: string
          - type: 'null'
          description: Email address for sending notifications about delivery failures.
          title: Notificationemail
        subscriptions:
          description: List of event types the webhook subscribes to.
          items:
            $ref: '#/components/schemas/AlertType'
          title: Subscriptions
          type: array
        url:
          description: The URL where the webhook will send notifications.
          title: Url
          type: string
      required:
      - subscriptions
      - url
      title: WebhookCreate
      type: object
    WebhookDeliveryAttemptSummary:
      description: An Event in Decoda's system.
      properties:
        alertId:
          description: The `Alert`'s id associated with this `WebhookDeliveryAttempt`.
          title: Alertid
          type: string
        createdDate:
          description: The date and time when the event was created.
          format: date-time
          title: Createddate
          type: string
        data:
          anyOf:
          - $ref: '#/components/schemas/PaymentSummary'
          - $ref: '#/components/schemas/RefundSummary'
          - $ref: '#/components/schemas/AdjustmentSummary'
          - $ref: '#/components/schemas/ChargeSummary'
          - $ref: '#/components/schemas/AppointmentDetail'
          - $ref: '#/components/schemas/MessageSummary'
          - $ref: '#/components/schemas/PaymentWithCharges'
          - $ref: '#/components/schemas/PatientSummary'
          description: The `Alert's` data associated with this `WebhookDeliveryAttempt`.
          title: Data
        deliveredDate:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date and time when the event was delivered.
          title: Delivereddate
        id:
          description: Unique identifier for the webhook delivery attempt.
          title: Id
          type: string
        lastDeliveryAttemptDate:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date and time when the last delivery attempt was made.
          title: Lastdeliveryattemptdate
        lastDeliveryAttemptError:
          anyOf:
          - type: string
          - type: 'null'
          description: The error message from the last delivery attempt, if any.
          title: Lastdeliveryattempterror
        lastDeliveryAttemptStatus:
          anyOf:
          - type: integer
          - type: 'null'
          description: The HTTP status of the last delivery attempt.
          title: Lastdeliveryattemptstatus
        type:
          $ref: '#/components/schemas/AlertType'
          description: The type of event.
      required:
      - id
      - type
      - data
      - createdDate
      - alertId
      title: WebhookDeliveryAttemptSummary
      type: object
    WebhookEventType:
      description: WebhookEventType is an enum that represents the type of event that
        will be sent to the webhook.
      enum:
      - PAYMENT_CREATED
      - PAYMENT_COMPLETED
      - PAYMENT_FAILED
      - CHARGE_CREATED
      - ADJUSTMENT_CREATED
      - REFUND_CREATED
      - PATIENT_CREATED
      - PATIENT_UPDATED
      title: WebhookEventType
      type: string
    WebhookSummary:
      properties:
        createdDate:
          description: The date and time when the webhook was created.
          format: date-time
          title: Createddate
          type: string
        id:
          description: Unique identifier for the webhook.
          title: Id
          type: string
        notificationEmail:
          anyOf:
          - type: string
          - type: 'null'
          description: Email address for sending notifications about delivery failures.
          title: Notificationemail
        secret:
          description: The secret key used for signing the webhook payloads.
          title: Secret
          type: string
        subscriptions:
          description: List of event types the webhook is subscribed to.
          items:
            $ref: '#/components/schemas/AlertType'
          title: Subscriptions
          type: array
        updatedDate:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: The date and time when the webhook was last updated.
          title: Updateddate
        url:
          description: The URL where the webhook sends notifications.
          title: Url
          type: string
      required:
      - id
      - subscriptions
      - url
      - createdDate
      - secret
      title: WebhookSummary
      type: object
    WebhookUpdate:
      properties:
        notificationEmail:
          anyOf:
          - type: string
          - type: 'null'
          description: Email address for sending notifications about delivery failures.
          title: Notificationemail
        subscriptions:
          anyOf:
          - items:
              $ref: '#/components/schemas/AlertType'
            type: array
          - type: 'null'
          description: List of event types the webhook subscribes to.
          title: Subscriptions
        url:
          anyOf:
          - type: string
          - type: 'null'
          description: The URL where the webhook will send notifications.
          title: Url
      title: WebhookUpdate
      type: object
info:
  description: API documentation for the Decoda API.
  title: Decoda API
  version: '1.0'
openapi: 3.1.0
paths:
  /v1/charge/adjust:
    post:
      description: Create a new `Adjustment` for an existing `Charge`. This is used
        in the event that a balance owed by a `Patient` needs to change (i.e. a write
        off or a mistake)
      operationId: charge_adjust_v1_charge_adjust_post
      parameters:
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustmentCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdjustmentSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Charge Adjust
      tags:
      - external
  /v1/charge/create:
    post:
      description: Create a new `Charge` for a `Patient`.
      operationId: charge_create_v1_charge_create_post
      parameters:
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargeCreateWithoutID'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargeDetail'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Charge Create
      tags:
      - external
  /v1/charge/get/{charge_id}:
    get:
      description: Get a `Charge` by ID. Also returns any `Adjustments`, `Payments`
        or `Refunds` for the `Charge`.
      operationId: charge_get_v1_charge_get__charge_id__get
      parameters:
      - in: path
        name: charge_id
        required: true
        schema:
          title: Charge Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargeDetail'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Charge Get
      tags:
      - external
  /v1/charge/get_by_external_id/{external_id}:
    get:
      description: Get a `Charge` by its external ID (i.e. the ID in your system).
      operationId: charge_get_by_external_id_v1_charge_get_by_external_id__external_id__get
      parameters:
      - in: path
        name: external_id
        required: true
        schema:
          title: External Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargeDetail'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Charge Get By External Id
      tags:
      - external
  /v1/charge/list:
    get:
      description: Get a list of `Charge`s. You can filter by `patientId`, `total`,
        `totalOutstanding`, `description`, `status`, and `external_id`.
      operationId: charge_list_v1_charge_list_get
      parameters:
      - description: The field to sort by in snake case, i.e. created_date
        in: query
        name: sort_by
        required: false
        schema:
          default: created_date
          description: The field to sort by in snake case, i.e. created_date
          title: Sort By
          type: string
      - description: The direction to sort by
        in: query
        name: sort_direction
        required: false
        schema:
          default: desc
          description: The direction to sort by
          enum:
          - asc
          - desc
          title: Sort Direction
          type: string
      - description: The patient ID to filter by
        in: query
        name: patient_id
        required: false
        schema:
          description: The patient ID to filter by
          title: Patient Id
          type: string
      - description: The status to filter by
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/ChargeStatus'
          description: The status to filter by
      - description: The external ID to filter by
        in: query
        name: external_id
        required: false
        schema:
          description: The external ID to filter by
          title: External Id
          type: string
      - description: The total to filter by
        in: query
        name: total
        required: false
        schema:
          description: The total to filter by
          title: Total
          type: number
      - description: The total outstanding to filter by
        in: query
        name: total_outstanding
        required: false
        schema:
          description: The total outstanding to filter by
          title: Total Outstanding
          type: number
      - description: The description to filter by
        in: query
        name: description
        required: false
        schema:
          description: The description to filter by
          title: Description
          type: string
      - in: query
        name: n
        required: false
        schema:
          default: 10
          title: N
          type: integer
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChargeSummary'
                title: Response Charge List V1 Charge List Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Charge List
      tags:
      - external
  /v1/invoice/create:
    post:
      description: Create a new `Invoice` for all `Patient` balances based on a Patient's
        `Charge`.
      operationId: create_invoice_v1_invoice_create_post
      parameters:
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Invoice
      tags:
      - external
  /v1/invoice/get/{invoice_id}:
    get:
      description: Get an `Invoice` by ID.
      operationId: get_invoice_v1_invoice_get__invoice_id__get
      parameters:
      - in: path
        name: invoice_id
        required: true
        schema:
          title: Invoice Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Invoice
      tags:
      - external
  /v1/invoice/list:
    get:
      description: Get a list of `Invoices`s. You can filter by `patient_id`, `status`,
        and `external_id`.
      operationId: list_invoices_v1_invoice_list_get
      parameters:
      - description: The field to sort by in snake case, i.e. created_date
        in: query
        name: sort_by
        required: false
        schema:
          default: created_date
          description: The field to sort by in snake case, i.e. created_date
          title: Sort By
          type: string
      - description: The direction to sort by
        in: query
        name: sort_direction
        required: false
        schema:
          default: desc
          description: The direction to sort by
          enum:
          - asc
          - desc
          title: Sort Direction
          type: string
      - description: The patient ID to filter by
        in: query
        name: patient_id
        required: false
        schema:
          description: The patient ID to filter by
          title: Patient Id
          type: string
      - description: The status to filter by
        in: query
        name: status
        required: false
        schema:
          description: The status to filter by
          enum:
          - active
          - inactive
          title: Status
          type: string
      - description: The external ID to filter by
        in: query
        name: external_id
        required: false
        schema:
          description: The external ID to filter by
          title: External Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InvoiceSummary'
                title: Response List Invoices V1 Invoice List Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: List Invoices
      tags:
      - external
  /v1/item/create:
    post:
      operationId: item_create_v1_item_create_post
      parameters:
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemCreateWithoutId'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Item Create
      tags:
      - external
  /v1/item/delete/{id}:
    delete:
      operationId: item_delete_v1_item_delete__id__delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Item Delete V1 Item Delete  Id  Delete
                type: boolean
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Item Delete
      tags:
      - external
  /v1/item/get/{id}:
    get:
      description: Get an `Item` by its ID
      operationId: item_get_v1_item_get__id__get
      parameters:
      - in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Item Get
      tags:
      - external
  /v1/item/list:
    get:
      description: List `Items`
      operationId: item_list_v1_item_list_get
      parameters:
      - description: Name of the item
        in: query
        name: name
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Name of the item
          title: Name
      - description: Category of the item
        in: query
        name: category
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Category of the item
          title: Category
      - description: Minimum price
        in: query
        name: price
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          description: Minimum price
          title: Price
      - description: Number of items per page
        in: query
        name: per_page
        required: false
        schema:
          default: 10
          description: Number of items per page
          title: Per Page
          type: integer
      - description: Archived status of the item
        in: query
        name: archived
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          description: Archived status of the item
          title: Archived
      - description: Description of the item
        in: query
        name: description
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Description of the item
          title: Description
      - description: Page number to retrieve
        in: query
        name: page
        required: false
        schema:
          default: 1
          description: Page number to retrieve
          title: Page
          type: integer
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ItemSummary_'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Item List
      tags:
      - external
  /v1/item/update/{id}:
    put:
      operationId: item_update_v1_item_update__id__put
      parameters:
      - in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Item Update
      tags:
      - external
  /v1/patient/create:
    post:
      description: 'Create a new `Patient`.


        Also creates a new `Chat` for the patient.'
      operationId: patient_create_v1_patient_create_post
      parameters:
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Patient Create
      tags:
      - external
  /v1/patient/get_by_external_id/{external_id}:
    get:
      description: Get a `Patient` by its external ID (i.e. the ID in your system).
      operationId: patient_get_by_external_id_v1_patient_get_by_external_id__external_id__get
      parameters:
      - in: path
        name: external_id
        required: true
        schema:
          title: External Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Patient Get By External Id
      tags:
      - external
  /v1/patient/list:
    get:
      description: 'Search for a `Patient` by name or phone number.


        If no `search_term` query parameter is provided, returns `n=10` `Patients`
        in descending order by `createdDate`.'
      operationId: patient_list_v1_patient_list_get
      parameters:
      - description: Search for a patient by name, phone number, or id.
        in: query
        name: search_term
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Search for a patient by name, phone number, or id.
          title: Search Term
      - description: The external user ID to filter by
        in: query
        name: external_user_id
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: The external user ID to filter by
          title: External User Id
      - description: Number of results to return, ordered by createdDate
        in: query
        name: n
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 10
          description: Number of results to return, ordered by createdDate
          title: N
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PatientSummary'
                title: Response Patient List V1 Patient List Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Patient List
      tags:
      - external
  /v1/patient/update/{patient_id}:
    put:
      description: Update an existing `Patient`.
      operationId: patient_update_v1_patient_update__patient_id__put
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Patient Update
      tags:
      - external
  /v1/patient/{patient_id}:
    get:
      description: Get a `Patient` by ID.
      operationId: patient_get_v1_patient__patient_id__get
      parameters:
      - in: path
        name: patient_id
        required: true
        schema:
          title: Patient Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Patient Get
      tags:
      - external
  /v1/provider/create:
    post:
      description: Create a new `Provider`
      operationId: provider_create_v1_provider_create_post
      parameters:
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedUserSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Provider Create
      tags:
      - external
  /v1/provider/get/{provider_id}:
    get:
      description: Get a list of all roles for a provider
      operationId: provider_get_v1_provider_get__provider_id__get
      parameters:
      - in: path
        name: provider_id
        required: true
        schema:
          title: Provider Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedUserSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Provider Get
      tags:
      - external
  /v1/provider/get_by_external_id/{external_id}:
    get:
      description: Get a `Provider` by its external ID (i.e. the ID in your system).
      operationId: provider_get_by_external_id_v1_provider_get_by_external_id__external_id__get
      parameters:
      - in: path
        name: external_id
        required: true
        schema:
          title: External Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedUserSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Provider Get By External Id
      tags:
      - external
  /v1/provider/list:
    get:
      description: Get a list of all `Providers`
      operationId: provider_list_v1_provider_list_get
      parameters:
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TypedUserSummary'
                title: Response Provider List V1 Provider List Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Provider List
      tags:
      - external
  /v1/provider/update/{provider_id}:
    put:
      description: Update an existing `Provider`
      operationId: provider_update_v1_provider_update__provider_id__put
      parameters:
      - in: path
        name: provider_id
        required: true
        schema:
          title: Provider Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedUserSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Provider Update
      tags:
      - external
  /v1/role/list:
    get:
      description: Get a list of all available `Roles` for `Providers`.
      operationId: role_list_v1_role_list_get
      parameters:
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleSummary'
                title: Response Role List V1 Role List Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Role List
      tags:
      - external
  /v1/rule-set/create:
    post:
      description: Create a new `RuleSet` with associated `Rule`s.
      operationId: rule_set_create_v1_rule_set_create_post
      parameters:
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleSetCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleSetSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Rule Set Create
      tags:
      - external
  /v1/rule-set/list:
    get:
      description: Get a list of all `RuleSet`s with their associated `Rule`s.
      operationId: rule_set_list_v1_rule_set_list_get
      parameters:
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RuleSetSummary'
                title: Response Rule Set List V1 Rule Set List Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Rule Set List
      tags:
      - external
  /v1/rule/create:
    post:
      description: Create a new `Rule`.
      operationId: rule_create_v1_rule_create_post
      parameters:
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Rule Create
      tags:
      - external
  /v1/rule/get/{rule_id}:
    get:
      description: Get a `Rule` by ID.
      operationId: rule_get_v1_rule_get__rule_id__get
      parameters:
      - in: path
        name: rule_id
        required: true
        schema:
          title: Rule Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Rule Get
      tags:
      - external
  /v1/rule/list:
    get:
      description: Get a list of all `Rule`s.
      operationId: rule_list_v1_rule_list_get
      parameters:
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RuleSummary'
                title: Response Rule List V1 Rule List Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Rule List
      tags:
      - external
  /v1/rule/update/{rule_id}:
    put:
      description: Update an existing `Rule` by ID.
      operationId: rule_update_v1_rule_update__rule_id__put
      parameters:
      - in: path
        name: rule_id
        required: true
        schema:
          title: Rule Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Rule Update
      tags:
      - external
  /v1/webhook/create:
    post:
      description: Create a new `Webhook` for the `Tenant`
      operationId: webhook_create_v1_webhook_create_post
      parameters:
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Webhook Create
      tags:
      - external
  /v1/webhook/delete/{webhook_id}:
    delete:
      description: Delete a `Webhook`
      operationId: webhook_delete_v1_webhook_delete__webhook_id__delete
      parameters:
      - in: path
        name: webhook_id
        required: true
        schema:
          title: Webhook Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Webhook Delete V1 Webhook Delete  Webhook Id  Delete
                type: boolean
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Webhook Delete
      tags:
      - external
  /v1/webhook/events/{webhook_delivery_attempt_id}:
    get:
      description: Get a single `WebhookDeliveryAttempt`
      operationId: webhook_event_get_v1_webhook_events__webhook_delivery_attempt_id__get
      parameters:
      - in: path
        name: webhook_delivery_attempt_id
        required: true
        schema:
          title: Webhook Delivery Attempt Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookDeliveryAttemptSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Webhook Event Get
      tags:
      - external
  /v1/webhook/events/{webhook_delivery_attempt_id}/send:
    get:
      description: Send a `WebhookDeliveryAttempt` event to the `Webhook`. This is
        useful if you want to manually retry a webhook event that failed to deliver.
      operationId: webhook_event_send_v1_webhook_events__webhook_delivery_attempt_id__send_get
      parameters:
      - in: path
        name: webhook_delivery_attempt_id
        required: true
        schema:
          title: Webhook Delivery Attempt Id
          type: string
      - description: Notify the webhook owner via email if the event fails to deliver
        in: query
        name: notify_failure
        required: false
        schema:
          default: true
          description: Notify the webhook owner via email if the event fails to deliver
          title: Notify Failure
          type: boolean
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookDeliveryAttemptSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Webhook Event Send
      tags:
      - external
  /v1/webhook/get/{webhook_id}:
    get:
      description: Get a `Webhook`
      operationId: webhook_get_v1_webhook_get__webhook_id__get
      parameters:
      - in: path
        name: webhook_id
        required: true
        schema:
          title: Webhook Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Webhook Get
      tags:
      - external
  /v1/webhook/list:
    get:
      description: Get a list of all webhooks connected to the tenant
      operationId: webhook_list_v1_webhook_list_get
      parameters:
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WebhookSummary'
                title: Response Webhook List V1 Webhook List Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Webhook List
      tags:
      - external
  /v1/webhook/update/{webhook_id}:
    put:
      description: Update a `Webhook`
      operationId: webhook_update_v1_webhook_update__webhook_id__put
      parameters:
      - in: path
        name: webhook_id
        required: true
        schema:
          title: Webhook Id
          type: string
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSummary'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Webhook Update
      tags:
      - external
  /v1/webhook/{webhook_id}/delivery-attempts/list:
    get:
      description: List and search for attempts to *deliver* `Events` for a particular
        `Webhook` (i.e. `WebhookDeliveryAttempts`).
      operationId: webhook_events_list_v1_webhook__webhook_id__delivery_attempts_list_get
      parameters:
      - in: path
        name: webhook_id
        required: true
        schema:
          title: Webhook Id
          type: string
      - description: The type of event to filter by
        in: query
        name: event_type
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/WebhookEventType'
          - type: 'null'
          description: The type of event to filter by
          title: Event Type
      - description: Filter by if the event has not been delivered (i.e. we have not
          recieved a 200 from you for this event.)
        in: query
        name: is_delivered
        required: false
        schema:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Filter by if the event has not been delivered (i.e. we have
            not recieved a 200 from you for this event.)
          title: Is Delivered
      - description: Get Events created before this date
        in: query
        name: created_before
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Get Events created before this date
          title: Created Before
      - description: Get Events created after this date
        in: query
        name: created_after
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Get Events created after this date
          title: Created After
      - description: Filter by the HTTP status of the most recent delivery attempt
          (i.e. 200, 404, 500, etc.)
        in: query
        name: last_delivery_attempt_status
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by the HTTP status of the most recent delivery attempt
            (i.e. 200, 404, 500, etc.)
          title: Last Delivery Attempt Status
      - description: Filter by the error message of the most recent delivery attempt
        in: query
        name: last_delivery_attempt_error
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Filter by the error message of the most recent delivery attempt
          title: Last Delivery Attempt Error
      - description: Get Events with a delivery date before this date
        in: query
        name: delivery_date_before
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Get Events with a delivery date before this date
          title: Delivery Date Before
      - description: Get Events with a delivery date after this date
        in: query
        name: delivery_date_after
        required: false
        schema:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: Get Events with a delivery date after this date
          title: Delivery Date After
      - description: The field to sort by
        in: query
        name: sort_by
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          default: created_date
          description: The field to sort by
          title: Sort By
      - description: The direction to sort by
        in: query
        name: sort_direction
        required: false
        schema:
          anyOf:
          - enum:
            - asc
            - desc
            type: string
          - type: 'null'
          default: desc
          description: The direction to sort by
          title: Sort Direction
      - description: The maximum number of results to return
        in: query
        name: limit
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 10
          description: The maximum number of results to return
          title: Limit
      - description: The number of results to skip at the beginning
        in: query
        name: offset
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 0
          description: The number of results to skip at the beginning
          title: Offset
      - description: The tenant you are making this request on behalf of
        in: header
        name: TENANT
        required: true
        schema:
          description: The tenant you are making this request on behalf of
          title: Tenant
          type: string
      - description: Your api key
        in: header
        name: API-KEY
        required: true
        schema:
          description: Your api key
          title: Api-Key
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WebhookDeliveryAttemptSummary'
                title: Response Webhook Events List V1 Webhook  Webhook Id  Delivery
                  Attempts List Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Webhook Events List
      tags:
      - external
